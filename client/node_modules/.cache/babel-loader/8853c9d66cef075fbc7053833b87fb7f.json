{"ast":null,"code":"var _jsxFileName = \"/home/dago/Desktop/psh/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { CSVLink } from \"react-csv\";\nimport Axios from \"axios\";\n\nfunction timeConverter(UNIX_timestamp) {\n  const milliseconds = UNIX_timestamp * 1000;\n  return dateObject = new Date(milliseconds);\n  return dateObject.toLocaleString(); //2019-12-9 10:30:15\n}\n\nfunction App() {\n  const [timeLastUpdate, setTimeLastUpdate] = useState(0);\n  const [topScoresList, setTopScoresList] = useState([]); // function updateReport(list) {\n  //   state.setCsvReport(headersCsv.concat(list));\n  // };\n\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/get').then(response => {\n      setTopScoresList(response.data); // updateReport(response.data);\n\n      console.log(\"data fetched\");\n    });\n    const interval = setInterval(() => {\n      console.log(\"getting data pi pi pu pu\");\n      Axios.get('http://localhost:3001/api/get').then(response => {\n        setTopScoresList(response.data);\n        console.log(\"data fetched\");\n      });\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \" Top Scores \"), topScoresList.map(elem => {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: elem.profile_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), \" \", elem.nickname, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Score: \", elem.value, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, \"generated time: \", timeConverter(elem.timestamp.toDateString))));\n  }), /*#__PURE__*/React.createElement(CSVLink, {\n    data: topScoresList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Download report\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dago/Desktop/psh/client/src/App.js"],"names":["React","useState","useEffect","CSVLink","Axios","timeConverter","UNIX_timestamp","milliseconds","dateObject","Date","toLocaleString","App","timeLastUpdate","setTimeLastUpdate","topScoresList","setTopScoresList","get","then","response","data","console","log","interval","setInterval","clearInterval","map","elem","profile_image","nickname","value","timestamp","toDateString"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,CAAuBC,cAAvB,EAAsC;AACpC,QAAMC,YAAY,GAAGD,cAAc,GAAG,IAAtC;AACA,SAAOE,UAAU,GAAG,IAAIC,IAAJ,CAASF,YAAT,CAApB;AACA,SAAOC,UAAU,CAACE,cAAX,EAAP,CAHoC,CAGA;AACrC;;AAED,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD,CAFa,CAIb;AACA;AACA;;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACY,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAc;AAC1DH,MAAAA,gBAAgB,CAACG,QAAQ,CAACC,IAAV,CAAhB,CAD0D,CAE1D;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,KAJD;AAKA,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCH,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAjB,MAAAA,KAAK,CAACY,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAc;AAC5DH,QAAAA,gBAAgB,CAACG,QAAQ,CAACC,IAAV,CAAhB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,OAHD;AAID,KAN2B,EAMzB,KANyB,CAA5B;AAOA,WAAO,MAAMG,aAAa,CAACF,QAAD,CAA1B;AACD,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGR,aAAa,CAACW,GAAd,CAAmBC,IAAD,IAAU;AAC3B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,OACwCD,IAAI,CAACE,QAD7C,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACYF,IAAI,CAACG,KADjB,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACmBxB,aAAa,CAACqB,IAAI,CAACI,SAAL,CAAeC,YAAhB,CADhC,CAFF,CAFF,CADF;AAWD,GAZA,CAFH,eAeE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEjB,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAfF,CADF;AAmBD;;AAED,eAAeH,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { CSVLink } from \"react-csv\";\nimport Axios from \"axios\";\n\nfunction timeConverter(UNIX_timestamp){\n  const milliseconds = UNIX_timestamp * 1000 ;\n  return dateObject = new Date(milliseconds);\n  return dateObject.toLocaleString(); //2019-12-9 10:30:15\n}\n\nfunction App() {\n  const [timeLastUpdate, setTimeLastUpdate] = useState(0);\n  const [topScoresList, setTopScoresList] = useState([]);\n  \n  // function updateReport(list) {\n  //   state.setCsvReport(headersCsv.concat(list));\n  // };\n\n  \n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/get').then((response) => {\n        setTopScoresList(response.data);\n        // updateReport(response.data);\n        console.log(\"data fetched\")\n    })\n    const interval = setInterval(() => {\n      console.log(\"getting data pi pi pu pu\");\n      Axios.get('http://localhost:3001/api/get').then((response) => {\n        setTopScoresList(response.data);\n        console.log(\"data fetched\")\n      })\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1> Top Scores </h1>\n      {topScoresList.map((elem) => {\n        return (\n          <h2>\n            <img src={elem.profile_image}></img> {elem.nickname}  \n            <h2>\n                Score: {elem.value}\n              <h6> \n                generated time: {timeConverter(elem.timestamp.toDateString)}\n              </h6>\n            </h2> \n          </h2>\n        );\n      })}\n      <CSVLink data={topScoresList} >Download report</CSVLink>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}