{"ast":null,"code":"var _jsxFileName = \"/home/dago/Desktop/psh/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { CSVLink } from \"react-csv\";\nimport Axios from \"axios\";\nconst headersCsv = [{\n  label: \"Nickname\",\n  key: \"nickname\"\n}, {\n  label: \"Profile Image Link\",\n  key: \"profile_image\"\n}, {\n  label: \"Score\",\n  key: \"value\"\n}];\n\nfunction App() {\n  const [timeLastUpdate, setTimeLastUpdate] = useState(0);\n  const [topScoresList, setTopScoresList] = useState([]);\n  const [csvReport, setCsvReport] = useState({\n    data: [],\n    headers: headersCsv,\n    filename: \"report.csv\"\n  });\n\n  const downloadReport = (event, done) => {\n    // API call to get data\n    const objReport = {\n      filename: 'Clue_Mediator_Report_Async.csv',\n      headers: headersCsv,\n      data: topScoresList\n    };\n    this.setState({\n      csvReport: objReport\n    }, () => {\n      done();\n    });\n  };\n\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/get').then(response => {\n      setTopScoresList(response.data);\n      console.log(\"data fetched\");\n    });\n    const interval = setInterval(() => {\n      console.log(\"getting data pi pi pu pu\");\n      Axios.get('http://localhost:3001/api/get').then(response => {\n        setTopScoresList(response.data);\n        console.log(\"data fetched\");\n      });\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \" Top Scores \"), topScoresList.map(elem => {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: elem.profile_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), \" \", elem.nickname, \"  \", /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 67\n      }\n    }, \"Score: \", elem.value));\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: downloadReport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \" Export csv \"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dago/Desktop/psh/client/src/App.js"],"names":["React","useState","useEffect","CSVLink","Axios","headersCsv","label","key","App","timeLastUpdate","setTimeLastUpdate","topScoresList","setTopScoresList","csvReport","setCsvReport","data","headers","filename","downloadReport","event","done","objReport","setState","get","then","response","console","log","interval","setInterval","clearInterval","map","elem","profile_image","nickname","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,GAAG,EAAE;AAA1B,CADiB,EAEjB;AAAED,EAAAA,KAAK,EAAE,oBAAT;AAA+BC,EAAAA,GAAG,EAAE;AAApC,CAFiB,EAGjB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,GAAG,EAAE;AAAvB,CAHiB,CAAnB;;AAMA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC;AAACc,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,OAAO,EAAEX,UAApB;AAAgCY,IAAAA,QAAQ,EAAE;AAA1C,GAAD,CAA1C;;AAEA,QAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACtC;AACA,UAAMC,SAAS,GAAG;AAChBJ,MAAAA,QAAQ,EAAE,gCADM;AAEhBD,MAAAA,OAAO,EAAEX,UAFO;AAGhBU,MAAAA,IAAI,EAAEJ;AAHU,KAAlB;AAKA,SAAKW,QAAL,CAAc;AAAET,MAAAA,SAAS,EAAEQ;AAAb,KAAd,EAAwC,MAAM;AAC5CD,MAAAA,IAAI;AACL,KAFD;AAGD,GAVD;;AAaAlB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACmB,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAc;AAC1Db,MAAAA,gBAAgB,CAACa,QAAQ,CAACV,IAAV,CAAhB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,KAHD;AAIA,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCH,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAvB,MAAAA,KAAK,CAACmB,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAc;AAC5Db,QAAAA,gBAAgB,CAACa,QAAQ,CAACV,IAAV,CAAhB;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,OAHD;AAID,KAN2B,EAMzB,KANyB,CAA5B;AAOA,WAAO,MAAMG,aAAa,CAACF,QAAD,CAA1B;AACD,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGjB,aAAa,CAACoB,GAAd,CAAmBC,IAAD,IAAU;AAC3B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,OACwCD,IAAI,CAACE,QAD7C,qBACwD;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8BF,IAAI,CAACG,KAAnC,CADxD,CADF;AAKD,GANA,CAFH,eASE;AAAQ,IAAA,OAAO,EAAEjB,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,CADF;AAaD;;AAED,eAAeV,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { CSVLink } from \"react-csv\";\nimport Axios from \"axios\";\n\nconst headersCsv = [\n  { label: \"Nickname\", key: \"nickname\" },\n  { label: \"Profile Image Link\", key: \"profile_image\" },\n  { label: \"Score\", key: \"value\" },\n];\n\nfunction App() {\n  const [timeLastUpdate, setTimeLastUpdate] = useState(0);\n  const [topScoresList, setTopScoresList] = useState([]);\n  const [csvReport, setCsvReport] = useState({data: [], headers: headersCsv, filename: \"report.csv\"});\n\n  const downloadReport = (event, done) => {\n    // API call to get data\n    const objReport = {\n      filename: 'Clue_Mediator_Report_Async.csv',\n      headers: headersCsv,\n      data: topScoresList\n    };\n    this.setState({ csvReport: objReport }, () => {\n      done();\n    });\n  }\n\n  \n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/get').then((response) => {\n        setTopScoresList(response.data);\n        console.log(\"data fetched\")\n    })\n    const interval = setInterval(() => {\n      console.log(\"getting data pi pi pu pu\");\n      Axios.get('http://localhost:3001/api/get').then((response) => {\n        setTopScoresList(response.data);\n        console.log(\"data fetched\")\n      })\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1> Top Scores </h1>\n      {topScoresList.map((elem) => {\n        return (\n          <h2>\n            <img src={elem.profile_image}></img> {elem.nickname}  <h2 className=\"score\">Score: {elem.value}</h2> \n          </h2>\n        );\n      })}\n      <button onClick={downloadReport}> Export csv </button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}